import * as nodemailer from 'nodemailer';
import * as fs from 'fs';
import * as path from 'path';

import { Injectable } from '@nestjs/common';
import { from } from 'form-data';

@Injectable()
export class MailService {
  private transporter = nodemailer.createTransport({
    host: 'smtp.gmail.com',
    port: 587,
    secure: false,
    auth: {
      user: 'vacheck759@gmail.com',
      pass: 'dgak wkum ztbd kyfz',
    },
  });

  async sendBillet(to: string, subject: string, billetImagePath: string) {
    // billetImagePath est du type "/uploads/billets/123.png"
    const finalPath = path.join(process.cwd(), billetImagePath); // propre et s√ªr

    if (!fs.existsSync(finalPath)) {
      throw new Error('Image du billet non trouv√©e : ' + finalPath);
    }
    const mailOptions = {
      from: '"Mon √âv√©nement" <vacheck759@gmail.com>',
      to,
      subject,
      text: 'Voici votre billet pour l‚Äô√©v√©nement.',
      html: `
            <h2 style="font-family: Arial, sans-serif; color: #2c3e50; margin-bottom: 10px;">
            Bonjourüëã,
            </h2>
            <h3 style="font-family: Arial, sans-serif; color: #34495e; margin-bottom: 15px;">
            Merci pour votre inscription √† notre √©v√©nement.
            </h3>
            <p style="font-family: Arial, sans-serif; color: #555; font-size: 16px; line-height: 1.5; margin-bottom: 15px;">
            Veuillez trouver en pi√®ce jointe votre billet d‚Äôentr√©e. Pr√©sentez-le √† l‚Äôentr√©e le jour de l‚Äô√©v√©nement, sous format num√©rique ou imprim√©.
            </p>
            <p style="font-family: Arial, sans-serif; color: #27ae60; font-size: 16px; line-height: 1.5; margin-bottom: 15px;">
            Nous avons h√¢te de vous accueillir !üéâ
            </p>
            <p style="font-family: Arial, sans-serif; color: #555; font-size: 14px; line-height: 1.4;">
            Cordialement,<br>
            L‚Äô√©quipe d‚Äôorganisation
            </p>
        `,
      attachments: [
        {
          filename: 'billet.png',
          path: finalPath,
        },
      ],
    };


    await this.transporter.sendMail(mailOptions);
  }

  async sendMail(to: string, subject: string, text: string) {
    await this.transporter.sendMail({
      from: '"Mon √âv√©nement" <vacheck759@gmail.com>',
      to,
      subject,
      text,
    });
  }
}
